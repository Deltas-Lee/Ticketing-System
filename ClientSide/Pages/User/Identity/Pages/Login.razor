@page "/"
@page "/index"
@layout LoginLayout
@using TicketSystem.Pages.Identity.Pages.Models
@using TicketSystem.Models

@inject NavigationManager navigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

@inject HttpClient HttpClient

@code {
    LoginModel Input = new LoginModel();
    public string str = "not submiitred";
    public string email;
    public string token;
    public string refreshToken;


    private UserIdentity userIdentity;

    public async Task LoginUser()
    {
        str = "submitted";
        var User = new RegisterModel { email = Input.email, password = Input.password };

        var response = await HttpClient.PostAsJsonAsync("https://localhost:44380/api/AuthManagement/Login", User);

        if (response.IsSuccessStatusCode)
        {
            userIdentity = await response.Content.ReadFromJsonAsync<UserIdentity>
    ();
            str = userIdentity.token;
            token = userIdentity.token;
            refreshToken = userIdentity.refreshToken;
            email = Input.email;

            await sessionStorage.SetItemAsync("token", token);
            await sessionStorage.SetItemAsync("refreshToken", refreshToken);

            if (string.IsNullOrEmpty(token) && string.IsNullOrEmpty(refreshToken))
                return;

            navigationManager.NavigateTo("/Home");

        }
        else
        {
            str = response.ToString();
        }


    }
}

<h3>Login</h3>

<div class="row">
    <div class="col-md-3 col-md-offset-4 mx-auto">
        <section>
            <div>
                @*<p>@str</p>
                    <p>Email: @email</p>
                    <p>Token: @token</p>
                    <p>Refreshen Token: @refreshToken</p>*@
            </div>
            @*<div class="container">
                    <EditForm Model=@Input OnValidSubmit="@LoginUser" class="col-md-6 col-md-offset-2">
                        <div class="form-group">
                            <label>Email</label>
                            <InputText @bind-Value="Input.email" class="form-control" />
                            <span><ValidationMessage For="@(() => Input.email)" /></span>
                        </div>
                        <div class="form-group">
                            <label>Password</label>
                            <InputText @bind-Value="Input.password" class="form-control" />
                            <span><ValidationMessage For="@(() => Input.password)" /></span>
                        </div>

                        <button type="submit" name="btnregister" class="btn btn-primary">Log In</button>
                    </EditForm>
                </div>*@


            @*<div>
                    <p>@str</p>
                    <hr />
                    <p>@str</p>
                </div>*@
        </section>
    </div>
</div>

<EditForm Model=@Input OnValidSubmit="@LoginUser">
    <DataAnnotationsValidator />

    <div class="imgcontainer">
        <img src="css/Image/login.png" alt="Avatar" class="avatar">
    </div>

    <div class="container">
        <label for="Email"><b>Email</b></label>
        @*<input type="text" placeholder="Email" name="Email" required>*@
        <InputText @bind-Value="Input.email" class="form-control" />
        <span><ValidationMessage For="@(() => Input.email)" /></span>

        <label for="Password"><b>Password</b></label>
        @*<input type="password" placeholder="Enter Password" name="Password" required>*@
        <InputText @bind-Value="Input.password" class="form-control" type="password" />
        <span><ValidationMessage For="@(() => Input.password)" /></span>

        <button type="submit" name="btnregister">Login</button>
        <label>
            <input type="checkbox" checked="checked" name="remember"> Remember me
        </label>
    </div>

    <div class="container" style="background-color:#f1f1f1">
        <button type="button" class="cancelbtn">Cancel</button>
        <span class="psw">Forgot <a href="#">password?</a></span>
    </div>
</EditForm>

